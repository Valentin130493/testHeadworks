{"version":3,"sources":["router/routes.ts","assets/svg/Placeholder.svg","components/_common/FavReceipt/FavReceipt.tsx","pages/Favourites/Favourites.tsx","assets/svg/circle.svg","store/actionTypes.ts","components/Modal/Modal.tsx","store/actions/actionToFavReceipts.ts","components/Header/Header.tsx","components/_common/Layout/Layout.tsx","api/useRecipes.ts","servises/api.ts","components/_common/Receipt/OneReceipt.tsx","pages/Receipt/Receipt.tsx","router/AppRouter.tsx","App.tsx","reportWebVitals.ts","store/reducers/favReceiptReducer.ts","store/index.ts","index.tsx"],"names":["ROUTES","FavReceipt","imgSrc","title","description","className","src","placeholder","alt","substr","Favourites","receipts","useSelector","state","fav","length","map","item","index","FAVOURITES_RECEIPT_TYPES","Modal","close","dispatch","useDispatch","useState","setState","inputChange","event","target","name","value","onChange","closeCircle","onClick","Button","color","variant","data","type","Header","navigate","useNavigate","location","useLocation","active","setActive","setClose","handleClose","id","size","pathname","Layout","children","getRandomReceipt","a","axios","get","res","OneReceipt","Receipt","useEffect","getReceipt","meals","strMeal","strInstructions","strMealThumb","idMeal","AppRouter","path","element","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","defaultState","favReceiptReducer","action","concat","reducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.31fffdb1.chunk.js","sourcesContent":["export const ROUTES = {\n  RECEIPT: \"/receipt\",\n  FAVOURITE: \"fav\",\n};\n","export default __webpack_public_path__ + \"static/media/Placeholder.1dc604e1.svg\";","import React from \"react\";\nimport placeholder from \"../../../assets/svg/Placeholder.svg\";\nimport \"./FavReceipt.scss\";\n\ninterface Props {\n  imgSrc?: string;\n  title?: string;\n  description?: string;\n}\n\nconst FavReceipt: React.FC<Props> = ({ imgSrc, title, description }) => {\n  return (\n    <section className={\"fav__receipt\"}>\n      <img\n        className={\"fav__receipts_img\"}\n        src={imgSrc === \"\" ? placeholder : imgSrc}\n        alt={\"Dish\"}\n      />\n      <h3 className={\"fav__title\"}> {title}</h3>\n      <p className={\"fav__description\"}>{description?.substr(0, 1500)}</p>\n    </section>\n  );\n};\n\nexport default FavReceipt;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Receipt } from \"../../store/reducers/favReceiptReducer\";\nimport FavReceipt from \"../../components/_common/FavReceipt/FavReceipt\";\nimport \"./Favourites.scss\";\n\nconst Favourites = () => {\n  const { receipts } = useSelector((state: any) => state.fav);\n\n  return (\n    <div className={\"fav__maim\"}>\n      {receipts.length === 0\n        ? null\n        : receipts.map((item: Receipt, index: number) => {\n            return (\n              <FavReceipt\n                key={index}\n                imgSrc={item.imgSrc}\n                description={item.description}\n                title={item.title}\n              />\n            );\n          })}\n    </div>\n  );\n};\n\nexport default Favourites;\n","export default __webpack_public_path__ + \"static/media/circle.c0675367.svg\";","export const FAVOURITES_RECEIPT_TYPES = {\n  ADD_TO_FAV: \"ADD_TO_FAV\",\n  ADD_CUSTOM: \"ADD_CUSTOM\",\n};\n","import React, { ChangeEvent, useState } from \"react\";\nimport \"./Modal.scss\";\nimport closeCircle from \"../../assets/svg/circle.svg\";\nimport { Button } from \"@mui/material\";\nimport { useDispatch } from \"react-redux\";\nimport { actionAddCustomReceipt } from \"../../store/actions/actionToFavReceipts\";\n\ninterface Props {\n  close: () => void;\n}\n\nconst Modal: React.FC<Props> = ({ close }) => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    title: \"\",\n    description: \"\",\n  });\n\n  const inputChange = (event: ChangeEvent<HTMLInputElement>) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n\n  const addCustom = () => {\n    dispatch(\n      actionAddCustomReceipt({\n        title: state.title,\n        description: state.description,\n        imgSrc: \"\",\n      })\n    );\n    close();\n  };\n  return (\n    <div className={\"modal-back\"}>\n      <div className={\"base-modal\"}>\n        <div className={\"base-modal-wrapper\"}>\n          <div className={\"base-modal__header\"}>\n            <div className={\"first\"}>\n              <input\n                name={\"title\"}\n                className={\"input\"}\n                placeholder={\"Title\"}\n                value={state.title}\n                onChange={(event) => {\n                  inputChange(event);\n                }}\n              />\n              <img src={closeCircle} onClick={close} alt={\"closeCircle\"} />\n            </div>\n            <div className={\"second\"}>\n              <input\n                name={\"description\"}\n                className={\"input\"}\n                placeholder={\"Description\"}\n                value={state.description}\n                onChange={(event) => {\n                  inputChange(event);\n                }}\n              />\n              <Button color={\"secondary\"} variant={\"text\"} onClick={addCustom}>\n                Add\n              </Button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n","import { FAVOURITES_RECEIPT_TYPES } from \"../actionTypes\";\nimport { Receipt } from \"../reducers/favReceiptReducer\";\n\nexport const actionToFavReceipts = (data: Receipt) => {\n  return {\n    type: FAVOURITES_RECEIPT_TYPES.ADD_TO_FAV,\n    data,\n  };\n};\n\nexport const actionAddCustomReceipt = (data: {\n  title: string;\n  description: string;\n  imgSrc: string;\n}) => {\n  return {\n    type: FAVOURITES_RECEIPT_TYPES.ADD_CUSTOM,\n    data,\n  };\n};\n","import React, { useState } from \"react\";\nimport \"./Header.scss\";\nimport Button from \"@mui/material/Button\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { ROUTES } from \"../../router/routes\";\nimport Modal from \"../Modal/Modal\";\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [active, setActive] = useState(\"\");\n  const [close, setClose] = useState(false);\n\n  const chooseReceipt = () => {\n    setActive(\"receipt\");\n    navigate(ROUTES.RECEIPT);\n  };\n  const chooseFavourites = () => {\n    setActive(\"fav\");\n    navigate(ROUTES.FAVOURITE);\n  };\n  const handleClose = () => {\n    setClose(!close);\n  };\n\n  return (\n    <>\n      <header className={\"layout__header\"}>\n        <div className={\"buttons_block\"}>\n          <Button\n            id={\"receipt\"}\n            size={\"small\"}\n            color={active === \"receipt\" ? \"primary\" : \"secondary\"}\n            variant=\"contained\"\n            onClick={chooseReceipt}\n          >\n            Random dish\n          </Button>\n          <Button\n            id={\"fav\"}\n            size={\"small\"}\n            color={active === \"fav\" ? \"primary\" : \"secondary\"}\n            variant=\"contained\"\n            onClick={chooseFavourites}\n          >\n            Favourites\n          </Button>\n        </div>\n        {location.pathname === \"/fav\" && (\n          <Button variant={\"text\"} color={\"secondary\"} onClick={handleClose}>\n            Add custom dish\n          </Button>\n        )}\n        {close && <Modal close={handleClose} />}\n      </header>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Layout.scss\";\nimport Header from \"../../Header/Header\";\nimport { Outlet } from \"react-router-dom\";\n\ninterface Props {}\n\nconst Layout: React.FC<Props> = ({ children }) => {\n  return (\n    <div className={\"container\"}>\n      <Header />\n      <Outlet />\n    </div>\n  );\n};\n\nexport default Layout;\n","import { url } from \"../servises/api\";\nimport axios from \"axios\";\n\nexport const getRandomReceipt = async () => {\n  try {\n    const res = await axios.get(url);\n\n    return res;\n  } catch (error) {\n    throw error;\n  }\n};\n","export const url = \"https://www.themealdb.com/api/json/v1/1/random.php\";\n","import React from \"react\";\nimport placeholder from \"../../../assets/svg/Placeholder.svg\";\nimport \"./OneReceipt.scss\";\n\ninterface Props {\n  imgSrc?: string;\n  title?: string;\n  description?: string;\n}\n\nconst OneReceipt: React.FC<Props> = ({ imgSrc, title, description }) => {\n  return (\n    <section className={\"receipt\"}>\n      <img\n        className={\"receipts_img\"}\n        src={imgSrc === \"\" ? placeholder : imgSrc}\n        alt={\"Dish\"}\n      />\n      <h3 className={\"title\"}> {title}</h3>\n      <p className={\"description\"}>{description?.substr(0, 1500)}</p>\n    </section>\n  );\n};\n\nexport default OneReceipt;\n","import React, { useEffect, useState } from \"react\";\nimport { getRandomReceipt } from \"../../api/useRecipes\";\nimport { Button } from \"@mui/material\";\nimport OneReceipt from \"../../components/_common/Receipt/OneReceipt\";\nimport \"./Receipt.scss\";\nimport { useDispatch } from \"react-redux\";\nimport { actionToFavReceipts } from \"../../store/actions/actionToFavReceipts\";\n\ninterface Meal {\n  idMeal: string;\n  strMeal: string;\n  strInstructions: string;\n  strMealThumb: string;\n}\n\nconst Receipt = () => {\n  const dispatch = useDispatch();\n  const [state, setState] = useState<Meal | null>(null);\n  useEffect(() => {\n    getReceipt();\n  }, []);\n\n  const getReceipt = async () => {\n    let { data } = await getRandomReceipt();\n    setState(data?.meals[0] || null);\n  };\n\n  const addToFav = () => {\n    dispatch(\n      actionToFavReceipts({\n        id: state?.idMeal,\n        title: state?.strMeal,\n        imgSrc: state?.strMealThumb,\n        description: state?.strInstructions,\n      })\n    );\n    getReceipt();\n  };\n\n  return state ? (\n    <div className={\"main\"}>\n      <div>\n        <OneReceipt\n          title={state.strMeal}\n          description={state.strInstructions}\n          imgSrc={state.strMealThumb}\n        />\n      </div>\n\n      <div className={\"btn_block\"}>\n        <Button color={\"error\"} onClick={getReceipt}>\n          Skip\n        </Button>\n        <Button color={\"success\"} onClick={addToFav}>\n          like\n        </Button>\n      </div>\n    </div>\n  ) : null;\n};\n\nexport default Receipt;\n","import React from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { ROUTES } from \"./routes\";\nimport Favourites from \"../pages/Favourites/Favourites\";\nimport Layout from \"../components/_common/Layout/Layout\";\nimport Receipt from \"../pages/Receipt/Receipt\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Routes>\n        <Route path={\"/\"} element={<Layout />}>\n          <Route path={ROUTES.RECEIPT} element={<Receipt />} />\n          <Route path={ROUTES.FAVOURITE} element={<Favourites />} />\n        </Route>\n      </Routes>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from \"react\";\nimport \"./App.css\";\nimport AppRouter from \"./router/AppRouter\";\n\nfunction App() {\n  return <AppRouter />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { FAVOURITES_RECEIPT_TYPES } from \"../actionTypes\";\nimport { CustomAction } from \"../index\";\n\nexport interface Receipt {\n  id?: string;\n  title?: string;\n  imgSrc?: string;\n  description?: string;\n}\nconst defaultState: { receipts: Receipt[] } = {\n  receipts: [],\n};\n\nconst favReceiptReducer = (state = defaultState, action: CustomAction) => {\n  switch (action.type) {\n    case FAVOURITES_RECEIPT_TYPES.ADD_TO_FAV: {\n      return {\n        ...state,\n        receipts: state.receipts.concat(action.data),\n      };\n    }\n    case FAVOURITES_RECEIPT_TYPES.ADD_CUSTOM: {\n      return {\n        ...state,\n        receipts: state.receipts.concat(action.data),\n      };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default favReceiptReducer;\n","import { createStore, combineReducers } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport favReceiptReducer from \"./reducers/favReceiptReducer\";\n\nexport interface CustomAction {\n  type: string;\n  data: any;\n}\n\nconst reducer = combineReducers({\n  fav: favReceiptReducer,\n});\n\nexport const store = createStore(reducer, composeWithDevTools());\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}